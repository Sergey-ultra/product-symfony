#version: '3'
#
#services:
####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###

version: "3"
services:

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    tty: true
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=symfony-products.local
    ports:
      - "4500:80"
    links:
      - app
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    networks:
      - laravel



  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel



  #  #Postgres Service
  postgres:
    image: postgres:15-alpine
    container_name: ${APP_NAME}_postgres
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - laravel



#  #Redis Service
#  redis:
#    image: redis:alpine
#    ports:
#      - "6379:6379"
#    container_name: ${APP_NAME}_redis
#    networks:
#      - laravel


#Docker Networks
networks:
  laravel:
    driver: bridge



